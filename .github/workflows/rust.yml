name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  check-fmt:
    name: cargo fmt check
    runs-on: ubuntu-latest
    container:
      image: amd64/rust
    steps:
      - uses: actions/checkout@v4
      - name: Setup toolchain
        run: |
          rustup toolchain install stable
          rustup default stable
          rustup component add rustfmt
      - name: Run
        run: cargo fmt -- --check

  linux-build:
    name: cargo check
    runs-on: ubuntu-latest
    container:
      image: amd64/rust
      env:
        # Disable full debug symbol generation to speed up CI build and keep memory down
        # "1" means line tables only, which is useful for panic tracebacks.
        RUSTFLAGS: "-C debuginfo=1"
    steps:
      - uses: actions/checkout@v4
      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: /github/home/.cargo
          key: cargo-cache-
      - name: Setup toolchain
        run: |
          rustup toolchain install stable
          rustup default stable
          rustup component add rustfmt
      - name: Check workspace in debug mode
        run: |
          cargo check
      - name: Check workspace in release mode
        run: |
          cargo check --release

  linux-test:
    name: cargo test (amd64)
    needs: [linux-build]
    runs-on: ubuntu-latest
    container:
      image: amd64/rust
      env:
        RUSTFLAGS: "-C debuginfo=1"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: /github/home/.cargo
          key: cargo-cache-
      - name: Setup toolchain
        run: |
          rustup toolchain install stable
          rustup default stable
          rustup component add rustfmt
      - name: Build tests
        run: cargo test --no-run
      - name: Run tests
        run: cargo test

  clippy:
    name: cargo clippy check
    needs: [linux-build]
    runs-on: ubuntu-latest
    container:
      image: amd64/rust
      env:
        RUSTFLAGS: "-C debuginfo=1"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: /github/home/.cargo
          key: cargo-cache-
      - name: Setup toolchain
        run: |
          rustup toolchain install stable
          rustup default stable
          rustup component add rustfmt
      - name: Install Clippy
        run: rustup component add clippy
      - name: Run clippy
        run: cargo clippy --all-targets --workspace -- -D warnings
